<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Welcome to Coatcard AI - Master Code, Ace Interviews</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <style>
        body {
            font-family: 'Inter', sans-serif;
            overflow: hidden; /* Prevent scrollbars from the animated background */
        }
        .bg-gradient-animation {
            background: linear-gradient(-45deg, #fef3c7, #fde68a, #facc15, #eab308);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
        }
        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        .glass-card {
            background: rgba(255, 255, 255, 0.4);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .slide {
            transition: transform 0.5s ease-in-out;
        }
    </style>
</head>
<body class="bg-gradient-animation min-h-screen flex items-center justify-center p-4">
    <div class="max-w-6xl w-full mx-auto grid grid-cols-1 lg:grid-cols-2 gap-16 items-center">
        
        <!-- Left Column: Text Content & CTA -->
        <div class="text-center lg:text-left">
            <header class="mb-8">
                <h1 class="text-5xl md:text-6xl font-extrabold text-yellow-900 leading-tight">
                    Coatcard AI
                </h1>
                <p class="text-xl md:text-2xl text-amber-800 mt-4">
                    Your unfair advantage in mastering code and acing technical interviews.
                </p>
            </header>

            <div class="flex flex-col sm:flex-row justify-center lg:justify-start gap-4">
                <a href="/register" class="px-8 py-4 bg-yellow-900 text-white font-bold rounded-lg shadow-lg hover:bg-black transform hover:-translate-y-1 transition-all duration-300 text-lg">
                    Start Learning for Free
                </a>
                <a href="/login" class="px-8 py-4 bg-white/80 text-yellow-900 font-bold rounded-lg shadow-lg hover:bg-white transform hover:-translate-y-1 transition-all duration-300 text-lg">
                    Login
                </a>
            </div>
        </div>

        <!-- Right Column: "Why Use Me?" Slideshow -->
        <div class="glass-card rounded-3xl p-8 w-full max-w-md mx-auto">
            <h2 class="text-2xl font-bold text-yellow-900 mb-6 text-center">Why Coatcard AI?</h2>
            
            <!-- Slideshow Container -->
            <div id="slideshow-container" class="relative h-48 overflow-hidden">
                <!-- Slide 1: Deep CS Expertise -->
                <div class="slide absolute w-full h-full flex flex-col items-center justify-center text-center">
                    <div class="bg-yellow-400 p-3 rounded-full mb-3">
                        <svg class="w-8 h-8 text-yellow-900" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m12.728 9.9a5 5 0 01-9.9 0m9.9 0a5 5 0 00-9.9 0m9.9 0h.01"></path></svg>
                    </div>
                    <h3 class="font-bold text-lg text-yellow-900">Deep CS Expertise</h3>
                    <p class="text-sm text-amber-800 mt-1">Accurate, clear explanations focused on C++ and core computer science fundamentals.</p>
                </div>

                <!-- Slide 2: Structured Learning -->
                <div class="slide absolute w-full h-full flex flex-col items-center justify-center text-center" style="transform: translateX(100%);">
                     <div class="bg-yellow-400 p-3 rounded-full mb-3">
                        <svg class="w-8 h-8 text-yellow-900" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7"></path></svg>
                    </div>
                    <h3 class="font-bold text-lg text-yellow-900">Structured, Step-by-Step Learning</h3>
                    <p class="text-sm text-amber-800 mt-1">Complex topics are broken down into Logic, Code, and detailed Explanations.</p>
                </div>

                <!-- Slide 3: From Brute-Force to Optimal -->
                <div class="slide absolute w-full h-full flex flex-col items-center justify-center text-center" style="transform: translateX(100%);">
                     <div class="bg-yellow-400 p-3 rounded-full mb-3">
                        <svg class="w-8 h-8 text-yellow-900" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path></svg>
                    </div>
                    <h3 class="font-bold text-lg text-yellow-900">From Brute-Force to Optimal</h3>
                    <p class="text-sm text-amber-800 mt-1">Understand the 'why' behind optimization with clear trade-off insights.</p>
                </div>
                
                 <!-- Slide 4: Pressure-Ready Exam Mode -->
                <div class="slide absolute w-full h-full flex flex-col items-center justify-center text-center" style="transform: translateX(100%);">
                     <div class="bg-yellow-400 p-3 rounded-full mb-3">
                        <svg class="w-8 h-8 text-yellow-900" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                    </div>
                    <h3 class="font-bold text-lg text-yellow-900">Pressure-Ready Exam Mode</h3>
                    <p class="text-sm text-amber-800 mt-1">Type "ExamTime" to get clean, optimized code solutions instantly.</p>
                </div>

                 <!-- Slide 5: Personalized to Your Goals -->
                <div class="slide absolute w-full h-full flex flex-col items-center justify-center text-center" style="transform: translateX(100%);">
                     <div class="bg-yellow-400 p-3 rounded-full mb-3">
                       <svg class="w-8 h-8 text-yellow-900" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path></svg>
                    </div>
                    <h3 class="font-bold text-lg text-yellow-900">Personalized to Your Goals</h3>
                    <p class="text-sm text-amber-800 mt-1">Get answers tailored to your role, field, and learning objectives.</p>
                </div>
            </div>

            <!-- Dots Navigation -->
            <div id="slideshow-dots" class="flex justify-center space-x-2 mt-6">
                <!-- Dots will be generated by JS -->
            </div>
        </div>
    </div>

    <script>
        const slides = document.querySelectorAll('.slide');
        const dotsContainer = document.getElementById('slideshow-dots');
        let currentSlide = 0;
        let slideInterval;

        // Create dots for each slide
        slides.forEach((_, index) => {
            const dot = document.createElement('button');
            dot.classList.add('w-2', 'h-2', 'rounded-full', 'transition-colors', 'duration-300');
            dot.classList.add(index === 0 ? 'bg-yellow-900' : 'bg-yellow-400');
            dot.addEventListener('click', () => {
                goToSlide(index);
                resetInterval();
            });
            dotsContainer.appendChild(dot);
        });
        const dots = dotsContainer.querySelectorAll('button');

        function goToSlide(slideIndex) {
            slides.forEach((slide, index) => {
                slide.style.transform = `translateX(${(index - slideIndex) * 100}%)`;
            });
            dots.forEach((dot, index) => {
                dot.classList.toggle('bg-yellow-900', index === slideIndex);
                dot.classList.toggle('bg-yellow-400', index !== slideIndex);
            });
            currentSlide = slideIndex;
        }

        function nextSlide() {
            const nextIndex = (currentSlide + 1) % slides.length;
            goToSlide(nextIndex);
        }

        function resetInterval() {
            clearInterval(slideInterval);
            slideInterval = setInterval(nextSlide, 5000); // 5 seconds
        }

        // Start auto-play
        resetInterval();
    </script>
</body>
</html>
